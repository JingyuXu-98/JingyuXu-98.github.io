<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>AnythingLLM的安装与使用</title>
    <url>/2025/02/08/AnythingLLM%E7%9A%84%E5%AE%89%E8%A3%85%E4%B8%8E%E4%BD%BF%E7%94%A8/</url>
    <content><![CDATA[<p>在这篇文章中，我们将介绍如何安装和使用 AnythingLLM，包括创建工作区和选择模型的步骤。</p>
<span id="more"></span>

<p><a class="link"   href="https://anythingllm.com/desktop" >AnythingLLM官网<i class="fa-solid fa-arrow-up-right ml-[0.2em] font-light align-text-top text-[0.7em] link-icon"></i></a>下载并安装AnythingLLM</p>
<p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/../images/AnythingLLM%E7%9A%84%E5%AE%89%E8%A3%85%E4%B8%8E%E4%BD%BF%E7%94%A8/%E5%BE%AE%E4%BF%A1%E6%88%AA%E5%9B%BE_20250208203352.png"
                     
                ></p>
<p>程序安装完成之后，新建工作区并且选择你要使用的模型</p>
<p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/../images/AnythingLLM%E7%9A%84%E5%AE%89%E8%A3%85%E4%B8%8E%E4%BD%BF%E7%94%A8/%E5%BE%AE%E4%BF%A1%E6%88%AA%E5%9B%BE_20250209223041.png"
                     
                ></p>
<p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/../images/AnythingLLM%E7%9A%84%E5%AE%89%E8%A3%85%E4%B8%8E%E4%BD%BF%E7%94%A8/%E5%BE%AE%E4%BF%A1%E6%88%AA%E5%9B%BE_20250209223111.png"
                     
                ></p>
<p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/../images/AnythingLLM%E7%9A%84%E5%AE%89%E8%A3%85%E4%B8%8E%E4%BD%BF%E7%94%A8/%E5%BE%AE%E4%BF%A1%E6%88%AA%E5%9B%BE_20250209223159.png"
                     
                ></p>
<p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/../images/AnythingLLM%E7%9A%84%E5%AE%89%E8%A3%85%E4%B8%8E%E4%BD%BF%E7%94%A8/%E5%BE%AE%E4%BF%A1%E6%88%AA%E5%9B%BE_20250209223221.png"
                     
                ></p>
<p>设置完成之后就可以进行对话，并且可以构建本地知识库。点击工作区的上传按钮，然后将想要放入知识库的文件拖拽上传(这里其实还是在本地，只是放入了这个工作区了)，然后进行对话的时候模型就可以根据本地知识库进行回答了。</p>
<p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/../images/AnythingLLM%E7%9A%84%E5%AE%89%E8%A3%85%E4%B8%8E%E4%BD%BF%E7%94%A8/%E5%BE%AE%E4%BF%A1%E6%88%AA%E5%9B%BE_20250226124819.png"
                     
                ></p>
<p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/../images/AnythingLLM%E7%9A%84%E5%AE%89%E8%A3%85%E4%B8%8E%E4%BD%BF%E7%94%A8/%E5%BE%AE%E4%BF%A1%E6%88%AA%E5%9B%BE_20250209223704.png"
                     
                ></p>
<p>放入工作区的文档最好能够pin一下，这样子后续问问题的时候模型都会默认先查看一下pin住的文件是否有和问题相关内容，然后再进行回答。</p>
<p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/../images/AnythingLLM%E7%9A%84%E5%AE%89%E8%A3%85%E4%B8%8E%E4%BD%BF%E7%94%A8/%E5%BE%AE%E4%BF%A1%E6%88%AA%E5%9B%BE_20250226140222.png"
                     
                ></p>
<p>然后就可以问一些具体的问题了</p>
<p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/../images/AnythingLLM%E7%9A%84%E5%AE%89%E8%A3%85%E4%B8%8E%E4%BD%BF%E7%94%A8/%E5%BE%AE%E4%BF%A1%E6%88%AA%E5%9B%BE_20250226140316.png"
                     
                ></p>
<p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/../images/AnythingLLM%E7%9A%84%E5%AE%89%E8%A3%85%E4%B8%8E%E4%BD%BF%E7%94%A8/%E5%BE%AE%E4%BF%A1%E6%88%AA%E5%9B%BE_20250226140622.png"
                     
                ></p>
<p>可以看的出来，确实没有胡说八道，还是能够根据我的知识库来回答我的问题。</p>
<h2 id="AnythingLLM-配置网页搜索"><a href="#AnythingLLM-配置网页搜索" class="headerlink" title="AnythingLLM 配置网页搜索"></a>AnythingLLM 配置网页搜索</h2><p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/../images/AnythingLLM%E7%9A%84%E5%AE%89%E8%A3%85%E4%B8%8E%E4%BD%BF%E7%94%A8/%E5%BE%AE%E4%BF%A1%E6%88%AA%E5%9B%BE_20250217131442.png"
                     
                ></p>
<p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/../images/AnythingLLM%E7%9A%84%E5%AE%89%E8%A3%85%E4%B8%8E%E4%BD%BF%E7%94%A8/%E5%BE%AE%E4%BF%A1%E6%88%AA%E5%9B%BE_20250217131726.png"
                     
                ></p>
<p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/../images/AnythingLLM%E7%9A%84%E5%AE%89%E8%A3%85%E4%B8%8E%E4%BD%BF%E7%94%A8/%E5%BE%AE%E4%BF%A1%E6%88%AA%E5%9B%BE_20250217131758.png"
                     
                ></p>
<p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/../images/AnythingLLM%E7%9A%84%E5%AE%89%E8%A3%85%E4%B8%8E%E4%BD%BF%E7%94%A8/%E5%BE%AE%E4%BF%A1%E6%88%AA%E5%9B%BE_20250217131817.png"
                     
                ></p>
<p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/../images/AnythingLLM%E7%9A%84%E5%AE%89%E8%A3%85%E4%B8%8E%E4%BD%BF%E7%94%A8/%E5%BE%AE%E4%BF%A1%E6%88%AA%E5%9B%BE_20250217131927.png"
                     
                ></p>
]]></content>
      <categories>
        <category>技术</category>
      </categories>
      <tags>
        <tag>LLM</tag>
      </tags>
  </entry>
  <entry>
    <title>Binance合约资金费率套利</title>
    <url>/2025/02/22/Binance%E5%90%88%E7%BA%A6%E8%B5%84%E9%87%91%E8%B4%B9%E7%8E%87%E5%A5%97%E5%88%A9/</url>
    <content><![CDATA[
<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">
  <script id="hbeData" type="hbeData" data-hmacdigest="d1747cb73eff5d1ee81567e5fb49c38d94ab002a1470c915e580c075c300f74f">4469bbe8dab0642e085d537da0743b5bf63001ce66f4b2747dbdc2f1ccb0f3c976d8a816b9838f461164dd2e5fca6da69edffc7c9016775594853e2cb26da717cbe028277187c0e49caf0279727b5530</script>
  <div class="hbe hbe-content">
    <div class="hbe hbe-input hbe-input-default">
      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">
      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">
        <span class="hbe hbe-input-label-content hbe-input-label-content-default">Hey, password is required here.</span>
      </label>
    </div>
  </div>
</div>
<link href="/css/hbe.style.css" rel="stylesheet" type="text/css"><script data-swup-reload-script type="module" src="/js/plugins/hbe.js"></script>
<script data-swup-reload-script type="module">
import {initHBE} from "/js/plugins/hbe.js";
  console.log("hexo-blog-encrypt: loaded.");
    initHBE();
</script>
]]></content>
      <categories>
        <category>Crypto</category>
      </categories>
      <tags>
        <tag>套利策略</tag>
      </tags>
  </entry>
  <entry>
    <title>Git笔记</title>
    <url>/2025/01/31/Git%E7%AC%94%E8%AE%B0/</url>
    <content><![CDATA[<p>在这篇文章中，我们将分享 Git 的基本概念和常用命令，帮助你更好地管理代码版本。</p>
<span id="more"></span>

<h1 id="1-git"><a href="#1-git" class="headerlink" title="1. git"></a>1. git</h1><h3 id="git-介绍"><a href="#git-介绍" class="headerlink" title="git 介绍"></a>git 介绍</h3><p>工作区：代码本地存放的地方</p>
<p>暂存区：通过git add 将工作区的代码加入暂存区</p>
<p>本地库：通过git commit 提交到本地区，这时候就会生成对应的历史版本，这就删不掉了</p>
<p>代码托管中心：基于网络服务器的远程代码仓库，一般我们成为远程库 GitHub或者gitee 通过push可以将本地库的代码推送到远程库</p>
<h3 id="git-命令"><a href="#git-命令" class="headerlink" title="git 命令"></a>git 命令</h3><p>git config –global user.name 用户名 设置用户签名</p>
<p>git config –global user.email 邮箱 设置用户签名</p>
<p>git init 初始化本地库</p>
<p>在某个文件夹下面右键，git bash here进入terminal界面，这里就可以使用Linux语言了，linux和git是通用的，因为都是一个人创造的。</p>
<p>使用git status查看状态</p>
<p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/../images/Git%E7%AC%94%E8%AE%B0/image-20230117204606053.png"
                      alt="image-20230117204606053"
                ></p>
<p>发现这个文件夹里面什么都没有，这时候使用 vim hello.txt 在该文件夹内生成hello.txt 文件。使用cat hello.txt 来查看hello.txt文件</p>
<p>这时候使用git status 来查看状态就可以看到</p>
<p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/../images/Git%E7%AC%94%E8%AE%B0/image-20230117204738316.png"
                      alt="image-20230117204738316"
                ></p>
<p>这文件夹里面有个红色的hello.txt文件，红色说明这个文件只存在于工作区，git还没有追踪过这个文件。</p>
<p>将本地的文件添加到暂存区使用 git add hello.txt</p>
<p>添加到暂存区之后再使用git status查看状态，可以发现</p>
<p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/../images/Git%E7%AC%94%E8%AE%B0/image-20230117205128127.png"
                      alt="image-20230117205128127"
                ></p>
<p>文件变成了绿色，绿色说明当前git已经追踪到了这个文件，文件存在暂存区里面。暂存区里面的文件是可以删掉的 使用 git rm –cached <file>…就可以删掉</p>
<p>这里仅仅是从暂存区里面删除，但是工作区里面的文件还是存在的。</p>
<p>添加到暂存区之后需要将文件提交到本地库使用如下代码</p>
<p>git commit -m “日志信息(这个是自己写的)” 文件名</p>
<p>比如git commit -m “first commit” hello.txt</p>
<p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/../images/Git%E7%AC%94%E8%AE%B0/image-20230117205806681.png"
                      alt="image-20230117205806681"
                ></p>
<p>查看版本信息的命令 git reflog 查看引用日志信息</p>
<p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/../images/Git%E7%AC%94%E8%AE%B0/image-20230117210030996.png"
                      alt="image-20230117210030996"
                ></p>
<p>使用git log 查看详细日志的命令</p>
<p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/../images/Git%E7%AC%94%E8%AE%B0/image-20230117210040978.png"
                      alt="image-20230117210040978"
                ></p>
<p>然后我再修改一下文件</p>
<p>修改了之后再使用git status查看状态会发现，文件变成了modified状态并且名字也是红色的，说明这次文件的修改没有添加到暂存区</p>
<p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/../images/Git%E7%AC%94%E8%AE%B0/image-20230117212343618.png"
                      alt="image-20230117212343618"
                ></p>
<p>再使用 git  add 将文件添加到暂存区，再使用git status查看状态可以发现变成绿色的了。</p>
<p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/../images/Git%E7%AC%94%E8%AE%B0/image-20230117212450558.png"
                      alt="image-20230117212450558"
                ></p>
<p>再使用 git commit -m “second commit” hello.txt 来提交到本地库</p>
<p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/../images/Git%E7%AC%94%E8%AE%B0/image-20230117212644271.png"
                      alt="image-20230117212644271"
                ></p>
<p>使用 git reflog查看发现现在是有两个版本，并且指针指向的是第二个版本</p>
<p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/../images/Git%E7%AC%94%E8%AE%B0/image-20230117212753455.png"
                      alt="image-20230117212753455"
                ></p>
<p>这是我们使用 cat hello.txt 查看的就是第二个版本</p>
<p>查看历史版本 版本穿梭</p>
<p>使用 git reset –hard 版本号</p>
<p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/../images/Git%E7%AC%94%E8%AE%B0/image-20230117213422998.png"
                      alt="image-20230117213422998"
                ></p>
<p>现在再查看一下，发现指针已经回退到第二个版本了</p>
<p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/../images/Git%E7%AC%94%E8%AE%B0/image-20230117213447100.png"
                      alt="image-20230117213447100"
                ></p>
<h3 id="git-分支"><a href="#git-分支" class="headerlink" title="git 分支"></a>git 分支</h3><p>分支可以同时并行推进，并且卡法过程中，不会对其他分支产生影响。</p>
<table>
<thead>
<tr>
<th>命令名称</th>
<th>作用</th>
</tr>
</thead>
<tbody><tr>
<td>git branch 分支名</td>
<td>创建分支</td>
</tr>
<tr>
<td>git branch -v</td>
<td>查看分支</td>
</tr>
<tr>
<td>git checkout 分支名 或<br /> git switch 分支名</td>
<td>切换分支</td>
</tr>
<tr>
<td>git merge 分支名</td>
<td>把指定的分支合并到当前的分支上面</td>
</tr>
</tbody></table>
<p>现在创建一个分支 git branch hot-fix</p>
<p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/../images/Git%E7%AC%94%E8%AE%B0/image-20230117214921292.png"
                      alt="image-20230117214921292"
                ></p>
<p>接下来我们再hot-fix上面修改文件</p>
<p>首先使用git switch hot-fix来切换分支</p>
<p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/../images/Git%E7%AC%94%E8%AE%B0/image-20230117215159874.png"
                      alt="image-20230117215159874"
                ></p>
<p>现在hot-fix就变成绿色的了，并且星号也在hot-fix的前面</p>
<p>现在在hot-fix上面修改代码</p>
<p>分支如何合并呢 使用 git merge 分支名，如果想将hot-fix分支合并到master分支上面去，那么就需要站在master分支下面使用git merge hot-fix 这个命令。</p>
<p>这里因为master分支上面没有做修改，只有hot-fix分支上面做了修改，所以这个是正常的合并分支，并没有冲突。</p>
<p>还有一种情况是有冲突的情况下进行分支的合并</p>
<p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/../images/Git%E7%AC%94%E8%AE%B0/image-20230117220546891.png"
                      alt="image-20230117220546891"
                ></p>
<p>这样子的话就会提示代码冲突，并且现在会显示正在合并中MERGING</p>
<p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/../images/Git%E7%AC%94%E8%AE%B0/image-20230117220638276.png"
                      alt="image-20230117220638276"
                ></p>
<p>手动合并代码的话就先手动打开这个文件</p>
<p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/../images/Git%E7%AC%94%E8%AE%B0/image-20230117220856596.png"
                      alt="image-20230117220856596"
                ></p>
<p>会发现现在又两部分，红色圈出的是当前master分支的，绿色圈出的是想要和并的hot-fix分支的。我们需要做的就是保留我们想要的代码，并且保证整体代码行数是不变的。</p>
<p>修改完成之后保存，然后将认为修改的文件添加到暂存区，并提交本地库，<strong>但是这个时候提交本地库的时候就不能够带文件名了</strong>，git commit -m “merge test” </p>
<h1 id="2-github"><a href="#2-github" class="headerlink" title="2. github"></a>2. github</h1><table>
<thead>
<tr>
<th>命令名称</th>
<th>作用</th>
</tr>
</thead>
<tbody><tr>
<td>git remote -v</td>
<td>查看当前所有远程地址别名</td>
</tr>
<tr>
<td>git remote add 别名 远程地址</td>
<td>给远程地址起别名</td>
</tr>
<tr>
<td>git push 别名 分支</td>
<td>推送本地分支上的内容到远程仓库</td>
</tr>
<tr>
<td>git clone 远程地址</td>
<td>将远程仓库的内容克隆到本地</td>
</tr>
<tr>
<td>git pull 远程仓库地址别名 远程分支名</td>
<td>将远程仓库对于分支最新内容拉下来后与当前本地分支直接合并</td>
</tr>
</tbody></table>
<p>这里最好养成习惯，给远程库地址创建别名最好和本地库的文件夹名字相同。</p>
<p>使用git remote add 别名 地址</p>
<p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/../images/Git%E7%AC%94%E8%AE%B0/image-20230117224014452.png"
                      alt="image-20230117224014452"
                ></p>
<h3 id="代码推送"><a href="#代码推送" class="headerlink" title="代码推送"></a>代码推送</h3><p>代码推送的最小单位是分支，现在将本地master分支上面的代码推送到git-demo远程库上面去</p>
<p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/../images/Git%E7%AC%94%E8%AE%B0/image-20230117224527278.png"
                      alt="image-20230117224527278"
                ></p>
<h3 id="代码拉取"><a href="#代码拉取" class="headerlink" title="代码拉取"></a>代码拉取</h3><p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/../images/Git%E7%AC%94%E8%AE%B0/image-20230117224916983.png"
                      alt="image-20230117224916983"
                ></p>
<h3 id="代码克隆"><a href="#代码克隆" class="headerlink" title="代码克隆"></a>代码克隆</h3><h3 id="ssh免密登陆"><a href="#ssh免密登陆" class="headerlink" title="ssh免密登陆"></a>ssh免密登陆</h3><h2 id="3-使用Github上传本地文件的流程"><a href="#3-使用Github上传本地文件的流程" class="headerlink" title="3 使用Github上传本地文件的流程"></a>3 使用Github上传本地文件的流程</h2><p>将本地文件夹上传到GitHub作为一个不公开（私有）的项目，你可以按照以下步骤操作：</p>
<ol>
<li><p><strong>创建GitHub私有仓库</strong>：</p>
<ul>
<li>登录你的GitHub账号。</li>
<li>点击页面右上角的“+”号，选择“New repository”。</li>
<li>在新的页面中填写仓库名称和描述（可选），确保选择“Private”选项以创建一个私有仓库。</li>
<li>点击“Create repository”按钮完成创建。</li>
</ul>
</li>
<li><p><strong>准备本地仓库</strong>：</p>
<ul>
<li>打开命令行工具（如Git Bash、Terminal等）。</li>
<li>使用<code>cd</code>命令导航至你想要上传的本地文件夹位置。</li>
<li>输入<code>git init</code>初始化一个新的Git仓库。这会在你的文件夹中创建一个<code>.git</code>目录，用于管理版本控制信息。</li>
</ul>
</li>
<li><p><strong>关联本地与远程仓库</strong>：</p>
<ul>
<li>复制GitHub上新创建仓库页面提供的地址（通常在点击“Code”按钮后可以看到）。</li>
<li>在命令行中使用<code>git remote add origin &lt;你的GitHub仓库地址&gt;</code>命令，将本地仓库与GitHub上的远程仓库关联起来。</li>
</ul>
</li>
<li><p><strong>添加文件并提交</strong>：</p>
<ul>
<li>使用<code>git add .</code>命令添加所有文件到暂存区。</li>
<li>使用<code>git commit -m &quot;Initial commit&quot;</code>命令提交更改，并附上提交信息说明。</li>
</ul>
</li>
<li><p><strong>推送至GitHub</strong>：</p>
<ul>
<li>最后，使用<code>git push -u origin master</code>（如果默认分支名为master）或<code>git push -u origin main</code>（如果默认分支名是main）命令，将本地提交推送到GitHub远程仓库。</li>
</ul>
</li>
</ol>
<p>请确保你在执行这些步骤之前已经安装了Git，并配置好了GitHub账号的相关设置（如用户名和邮箱）。如果你遇到任何权限或认证问题，请检查是否正确设置了SSH密钥或访问令牌。</p>
<div class="code-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">git remote -v #查看地址对不对</span><br><span class="line">git add * #将所有文件添加</span><br><span class="line">git add . # 添加所有更改的文件</span><br><span class="line">git commit -m &quot;这次提交的注释&quot;  # 提交到本地仓库</span><br><span class="line">git push origin main  # 推送到远程仓库</span><br></pre></td></tr></table></figure></div>

<p>如果你有一些文件或子文件夹不希望被上传到GitHub仓库中，你可以通过创建一个名为 <code>.gitignore</code> 的文件来忽略这些特定的文件或目录。以下是具体步骤：</p>
<ol>
<li><strong>创建<code>.gitignore</code>文件</strong>：</li>
</ol>
<ul>
<li>在你的项目根目录下（即你想要上传的本地文件夹），创建一个名为 <code>.gitignore</code> 的文本文件。可以通过命令行使用 <code>touch .gitignore</code> 创建，或者直接在文件管理器中新建一个文本文档并重命名为 <code>.gitignore</code>。</li>
</ul>
<ol start="2">
<li><p><strong>编辑<code>.gitignore</code>文件</strong>：</p>
<ul>
<li>打开 <code>.gitignore</code> 文件，并列出你不希望包含在Git仓库中的文件和文件夹的名字。例如，如果有一个名为 <code>subfolder</code> 的子文件夹和一个名为 <code>file.txt</code> 的文件不想上传，可以在 <code>.gitignore</code> 文件中添加以下内容：<div class="code-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">subfolder/</span><br><span class="line">file.txt</span><br></pre></td></tr></table></figure></div></li>
<li>每个条目占一行，对于文件夹，请确保以 <code>/</code> 结尾以指定这是一个目录；对于文件，直接写文件名即可。</li>
</ul>
</li>
<li><p><strong>应用更改</strong>：</p>
<ul>
<li>保存 <code>.gitignore</code> 文件后，回到命令行工具。</li>
<li>使用 <code>git status</code> 查看状态，确认那些被忽略的文件和文件夹没有出现在待提交列表中。</li>
<li>然后按照之前的步骤继续执行 <code>git add .</code>、<code>git commit</code> 和 <code>git push</code> 等操作。</li>
</ul>
</li>
</ol>
<p>这样做之后，所有列在 <code>.gitignore</code> 文件中的文件和文件夹将不会被加入到Git仓库中，也不会被推送到GitHub上。<code>.gitignore</code> 文件是一个非常有用的工具，可以帮助你管理哪些文件应该被版本控制系统跟踪，哪些不应该。</p>
]]></content>
      <categories>
        <category>技术</category>
      </categories>
      <tags>
        <tag>Git</tag>
      </tags>
  </entry>
  <entry>
    <title>Ollama安装配置本地大模型</title>
    <url>/2025/02/01/Ollama%E5%AE%89%E8%A3%85%E9%85%8D%E7%BD%AE%E6%9C%AC%E5%9C%B0%E5%A4%A7%E6%A8%A1%E5%9E%8B/</url>
    <content><![CDATA[<p>在这篇文章中，我们将介绍如何安装和配置 Ollama 本地大模型，包括环境变量的设置。</p>
<span id="more"></span>

<p>Ollama 官网地址：<a class="link"   href="https://ollama.com/" >Ollama<i class="fa-solid fa-arrow-up-right ml-[0.2em] font-light align-text-top text-[0.7em] link-icon"></i></a></p>
<p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/../images/Ollama%E5%AE%89%E8%A3%85%E9%85%8D%E7%BD%AE%E6%9C%AC%E5%9C%B0%E5%A4%A7%E6%A8%A1%E5%9E%8B/2025-02-01-084209.png"
                     
                ></p>
<p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/../images/Ollama%E5%AE%89%E8%A3%85%E9%85%8D%E7%BD%AE%E6%9C%AC%E5%9C%B0%E5%A4%A7%E6%A8%A1%E5%9E%8B/2025-02-01-084333.png"
                     
                ></p>
<p>Ollama默认安装在C盘，安装完成之后需要更改Ollama模型存放位置，防止C盘爆掉，在系统环境变量中新建</p>
<p>变量名：OLLAMA_MODELS </p>
<p>变量值： D:\Ollama_Models</p>
<p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/../images/Ollama%E5%AE%89%E8%A3%85%E9%85%8D%E7%BD%AE%E6%9C%AC%E5%9C%B0%E5%A4%A7%E6%A8%A1%E5%9E%8B/2025-02-01-090050.png"
                     
                ></p>
<p>如果已经有模型存放在C盘中，迁移方法为将C盘的用户目录下的.ollama中的两个文件夹blobs和manifests移动到D盘我们新设置的存放路径即可，迁移之后可以在cmd中使用ollama list命令查看是否迁移成功。</p>
<p><a class="link"   href="https://ollama.com/search" >Ollama 模型地址<i class="fa-solid fa-arrow-up-right ml-[0.2em] font-light align-text-top text-[0.7em] link-icon"></i></a>可以进行具体模型的选择安装，以deepseek-r1为例</p>
<p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/../images/Ollama%E5%AE%89%E8%A3%85%E9%85%8D%E7%BD%AE%E6%9C%AC%E5%9C%B0%E5%A4%A7%E6%A8%A1%E5%9E%8B/%E5%BE%AE%E4%BF%A1%E6%88%AA%E5%9B%BE_20250203220924.png"
                     
                ></p>
<p>选择deepseek-r1 模型之后可以看到模型有蒸馏过后的1.5B、7B等，以及原版的671B模型，对应的模型下载需要运行的命令行代码也已经给出，只需要在命令行中运行对应的代码就可以下载并运行对应的大模型。</p>
<p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/../images/Ollama%E5%AE%89%E8%A3%85%E9%85%8D%E7%BD%AE%E6%9C%AC%E5%9C%B0%E5%A4%A7%E6%A8%A1%E5%9E%8B/%E5%BE%AE%E4%BF%A1%E6%88%AA%E5%9B%BE_20250203221227.png"
                     
                ></p>
<p>如果对应的模型还未下载，运行命令行之后就会开始下载模型，如果已经下载，运行命令行之后就会进入对话环节</p>
<p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/../images/Ollama%E5%AE%89%E8%A3%85%E9%85%8D%E7%BD%AE%E6%9C%AC%E5%9C%B0%E5%A4%A7%E6%A8%A1%E5%9E%8B/%E5%BE%AE%E4%BF%A1%E6%88%AA%E5%9B%BE_20250208125727.png"
                     
                ></p>
<p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/../images/Ollama%E5%AE%89%E8%A3%85%E9%85%8D%E7%BD%AE%E6%9C%AC%E5%9C%B0%E5%A4%A7%E6%A8%A1%E5%9E%8B/%E5%BE%AE%E4%BF%A1%E6%88%AA%E5%9B%BE_20250208151524.png"
                     
                ></p>
<p>想要结束对话使用&#x2F;bye命令即可</p>
<p>接下来安装Open WebUI，这是一个可扩展功能丰富且用户友好的子托管WebUI，设计为完全离线运行，并且支持各种LLM运行器，包括Ollama，并且它提供了检索增强生成等功能的支持。</p>
<p><a class="link"   href="https://github.com/open-webui/open-webui" >OpenWebUI Github 地址<i class="fa-solid fa-arrow-up-right ml-[0.2em] font-light align-text-top text-[0.7em] link-icon"></i></a></p>
<p>首先创建一个Conda环境</p>
<p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/../images/Ollama%E5%AE%89%E8%A3%85%E9%85%8D%E7%BD%AE%E6%9C%AC%E5%9C%B0%E5%A4%A7%E6%A8%A1%E5%9E%8B/%E5%BE%AE%E4%BF%A1%E6%88%AA%E5%9B%BE_20250203222044.png"
                     
                ></p>
<p>然后进入这个新建的环境，使用命令行在该环境中安装Open Web UI</p>
<p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/../images/Ollama%E5%AE%89%E8%A3%85%E9%85%8D%E7%BD%AE%E6%9C%AC%E5%9C%B0%E5%A4%A7%E6%A8%A1%E5%9E%8B/%E5%BE%AE%E4%BF%A1%E6%88%AA%E5%9B%BE_20250203222645.png"
                     
                ></p>
<p>安装需要科学上网，因为需要上huggingface下载一些模型，如果不科学上网会报错。安装完成并运行之后在浏览器中进入<a href="https://loaclhost:8080，界面如下所示">https://loaclhost:8080，界面如下所示</a></p>
<p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/../images/Ollama%E5%AE%89%E8%A3%85%E9%85%8D%E7%BD%AE%E6%9C%AC%E5%9C%B0%E5%A4%A7%E6%A8%A1%E5%9E%8B/%E5%BE%AE%E4%BF%A1%E6%88%AA%E5%9B%BE_20250203224346.png"
                     
                ></p>
<p>账号邮箱密码自己随便填，只要自己不忘记就可以,因为程序是完全在本地运行的。</p>
<p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/../images/Ollama%E5%AE%89%E8%A3%85%E9%85%8D%E7%BD%AE%E6%9C%AC%E5%9C%B0%E5%A4%A7%E6%A8%A1%E5%9E%8B/%E5%BE%AE%E4%BF%A1%E6%88%AA%E5%9B%BE_20250203224629.png"
                     
                ></p>
<p>然后选择自己之前已经在Ollama中安装的模型，然后就可以进行测试使用了。</p>
]]></content>
      <categories>
        <category>技术</category>
      </categories>
      <tags>
        <tag>LLM</tag>
      </tags>
  </entry>
  <entry>
    <title>OpenWebUI的更新以及接入外部API以硅基流动为例</title>
    <url>/2025/02/10/OpenWebUI%E7%9A%84%E6%9B%B4%E6%96%B0%E4%BB%A5%E5%8F%8A%E6%8E%A5%E5%85%A5%E5%A4%96%E9%83%A8API%E4%BB%A5%E7%A1%85%E5%9F%BA%E6%B5%81%E5%8A%A8%E4%B8%BA%E4%BE%8B/</url>
    <content><![CDATA[<p>本文将介绍如何更新 OpenWebUI 并接入外部 API，以硅基流动为例进行说明。</p>
<span id="more"></span>

<p>安装openwebui只需要在conda环境中使用pip安装</p>
<p>更新OpenWebUI 使用如下命令即可</p>
<div class="code-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">pip install open-webui --upgrade</span><br></pre></td></tr></table></figure></div>

<p>打开OpenWebUI</p>
<p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/../images/OpenWebUI%E7%9A%84%E6%9B%B4%E6%96%B0%E4%BB%A5%E5%8F%8A%E6%8E%A5%E5%85%A5%E5%A4%96%E9%83%A8API%E4%BB%A5%E7%A1%85%E5%9F%BA%E6%B5%81%E5%8A%A8%E4%B8%BA%E4%BE%8B/%E5%BE%AE%E4%BF%A1%E6%88%AA%E5%9B%BE_20250210143052.png"
                     
                ></p>
<p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/../images/OpenWebUI%E7%9A%84%E6%9B%B4%E6%96%B0%E4%BB%A5%E5%8F%8A%E6%8E%A5%E5%85%A5%E5%A4%96%E9%83%A8API%E4%BB%A5%E7%A1%85%E5%9F%BA%E6%B5%81%E5%8A%A8%E4%B8%BA%E4%BE%8B/%E5%BE%AE%E4%BF%A1%E6%88%AA%E5%9B%BE_20250210143317.png"
                     
                ></p>
<p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/../images/OpenWebUI%E7%9A%84%E6%9B%B4%E6%96%B0%E4%BB%A5%E5%8F%8A%E6%8E%A5%E5%85%A5%E5%A4%96%E9%83%A8API%E4%BB%A5%E7%A1%85%E5%9F%BA%E6%B5%81%E5%8A%A8%E4%B8%BA%E4%BE%8B/%E5%BE%AE%E4%BF%A1%E6%88%AA%E5%9B%BE_20250210143401.png"
                     
                ></p>
<p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/../images/OpenWebUI%E7%9A%84%E6%9B%B4%E6%96%B0%E4%BB%A5%E5%8F%8A%E6%8E%A5%E5%85%A5%E5%A4%96%E9%83%A8API%E4%BB%A5%E7%A1%85%E5%9F%BA%E6%B5%81%E5%8A%A8%E4%B8%BA%E4%BE%8B/%E5%BE%AE%E4%BF%A1%E6%88%AA%E5%9B%BE_20250210144241.png"
                     
                ></p>
<p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/../images/OpenWebUI%E7%9A%84%E6%9B%B4%E6%96%B0%E4%BB%A5%E5%8F%8A%E6%8E%A5%E5%85%A5%E5%A4%96%E9%83%A8API%E4%BB%A5%E7%A1%85%E5%9F%BA%E6%B5%81%E5%8A%A8%E4%B8%BA%E4%BE%8B/%E5%BE%AE%E4%BF%A1%E6%88%AA%E5%9B%BE_20250210144255.png"
                     
                ></p>
<p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/../images/OpenWebUI%E7%9A%84%E6%9B%B4%E6%96%B0%E4%BB%A5%E5%8F%8A%E6%8E%A5%E5%85%A5%E5%A4%96%E9%83%A8API%E4%BB%A5%E7%A1%85%E5%9F%BA%E6%B5%81%E5%8A%A8%E4%B8%BA%E4%BE%8B/%E5%BE%AE%E4%BF%A1%E6%88%AA%E5%9B%BE_20250210144310.png"
                     
                ></p>
<p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/../images/OpenWebUI%E7%9A%84%E6%9B%B4%E6%96%B0%E4%BB%A5%E5%8F%8A%E6%8E%A5%E5%85%A5%E5%A4%96%E9%83%A8API%E4%BB%A5%E7%A1%85%E5%9F%BA%E6%B5%81%E5%8A%A8%E4%B8%BA%E4%BE%8B/%E5%BE%AE%E4%BF%A1%E6%88%AA%E5%9B%BE_20250210144339.png"
                     
                ></p>
<p>注意需要填入的有三个信息，url、API key、调用的模型名称</p>
<p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/../images/OpenWebUI%E7%9A%84%E6%9B%B4%E6%96%B0%E4%BB%A5%E5%8F%8A%E6%8E%A5%E5%85%A5%E5%A4%96%E9%83%A8API%E4%BB%A5%E7%A1%85%E5%9F%BA%E6%B5%81%E5%8A%A8%E4%B8%BA%E4%BE%8B/%E5%BE%AE%E4%BF%A1%E6%88%AA%E5%9B%BE_20250210144843.png"
                     
                ></p>
<p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/../images/OpenWebUI%E7%9A%84%E6%9B%B4%E6%96%B0%E4%BB%A5%E5%8F%8A%E6%8E%A5%E5%85%A5%E5%A4%96%E9%83%A8API%E4%BB%A5%E7%A1%85%E5%9F%BA%E6%B5%81%E5%8A%A8%E4%B8%BA%E4%BE%8B/%E5%BE%AE%E4%BF%A1%E6%88%AA%E5%9B%BE_20250210144902.png"
                     
                ></p>
<p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/../images/OpenWebUI%E7%9A%84%E6%9B%B4%E6%96%B0%E4%BB%A5%E5%8F%8A%E6%8E%A5%E5%85%A5%E5%A4%96%E9%83%A8API%E4%BB%A5%E7%A1%85%E5%9F%BA%E6%B5%81%E5%8A%A8%E4%B8%BA%E4%BE%8B/%E5%BE%AE%E4%BF%A1%E6%88%AA%E5%9B%BE_20250210145007.png"
                     
                ></p>
]]></content>
      <categories>
        <category>LLM</category>
      </categories>
      <tags>
        <tag>OpenWebUI</tag>
      </tags>
  </entry>
  <entry>
    <title>Ubuntu安装Ollama并通过Cline使用Qwen-coder模型</title>
    <url>/2025/02/16/Ubuntu%E5%AE%89%E8%A3%85Ollama%E5%B9%B6%E9%80%9A%E8%BF%87Cline%E4%BD%BF%E7%94%A8Qwen-coder%E6%A8%A1%E5%9E%8B/</url>
    <content><![CDATA[<p>Ubuntu服务器安装Ollama,下载并使用coder模型</p>
<span id="more"></span>



<h2 id="Ubuntu-安装Ollama"><a href="#Ubuntu-安装Ollama" class="headerlink" title="Ubuntu 安装Ollama"></a>Ubuntu 安装Ollama</h2><p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/../images/Ubuntu%E5%AE%89%E8%A3%85Ollama%E5%B9%B6%E9%80%9A%E8%BF%87Cline%E4%BD%BF%E7%94%A8Qwen-coder%E6%A8%A1%E5%9E%8B/%E5%BE%AE%E4%BF%A1%E6%88%AA%E5%9B%BE_20250216202142.png"
                     
                ></p>
<p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/../images/Ubuntu%E5%AE%89%E8%A3%85Ollama%E5%B9%B6%E9%80%9A%E8%BF%87Cline%E4%BD%BF%E7%94%A8Qwen-coder%E6%A8%A1%E5%9E%8B/%E5%BE%AE%E4%BF%A1%E6%88%AA%E5%9B%BE_20250216202210.png"
                     
                ></p>
<p>一键安装之后修改ollama.service文件，改变一下端口</p>
<div class="code-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">sudo</span> nano /etc/systemd/system/ollama.service</span><br></pre></td></tr></table></figure></div>

<div class="code-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="code"><pre><span class="line">[Service]</span><br><span class="line">Environment=<span class="string">&quot;CUDA_VISIBLE_DEVICES=0,1,2,3&quot;</span>  <span class="comment"># 这里指定让Ollama识别到的显卡ID，0,1,2,3代表四张卡</span></span><br><span class="line">Environment=<span class="string">&quot;OLLAMA_SCHED_SPREAD=1&quot;</span>          <span class="comment"># 设置为1可以让这几张卡均衡使用</span></span><br><span class="line">Environment=<span class="string">&quot;OLLAMA_KEEP_ALIVE=-1&quot;</span>           <span class="comment"># 模型一直加载，不自动卸载</span></span><br><span class="line">Environment=<span class="string">&quot;OLLAMA_HOST=0.0.0.0&quot;</span>            <span class="comment"># 监听地址</span></span><br><span class="line">Environment=<span class="string">&quot;OLLAMA_PORT=11435&quot;</span>              <span class="comment"># 监听端口</span></span><br></pre></td></tr></table></figure></div>

<p>然后重新加载配置，重启ollama</p>
<div class="code-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="code"><pre><span class="line">systemctl daemon-reload</span><br><span class="line">systemctl restart ollama</span><br><span class="line">关闭服务</span><br><span class="line">systemctl stop ollama</span><br><span class="line">启动服务</span><br><span class="line">systemctl start ollama</span><br><span class="line">查看哪一个进程正在使用端口</span><br><span class="line"><span class="built_in">sudo</span> lsof -i :11434</span><br></pre></td></tr></table></figure></div>

<p>然后就可以根据ollama官网提供的下载并运行大模型的代码来下载或运行大模型了。</p>
<p>Qwen2.5-coder:32B模型</p>
<p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/../images/Ubuntu%E5%AE%89%E8%A3%85Ollama%E5%B9%B6%E9%80%9A%E8%BF%87Cline%E4%BD%BF%E7%94%A8Qwen-coder%E6%A8%A1%E5%9E%8B/%E5%BE%AE%E4%BF%A1%E6%88%AA%E5%9B%BE_20250216204454.png"
                     
                ></p>
<p>deepseek-coder-v2:236B模型</p>
<p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/../images/Ubuntu%E5%AE%89%E8%A3%85Ollama%E5%B9%B6%E9%80%9A%E8%BF%87Cline%E4%BD%BF%E7%94%A8Qwen-coder%E6%A8%A1%E5%9E%8B/%E5%BE%AE%E4%BF%A1%E6%88%AA%E5%9B%BE_20250216211207.png"
                     
                ></p>
<p>安装完成之后，我们可以结合VSCode的Cline插件实现和Cursor类似的效果</p>
<p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/../images/Ubuntu%E5%AE%89%E8%A3%85Ollama%E5%B9%B6%E9%80%9A%E8%BF%87Cline%E4%BD%BF%E7%94%A8Qwen-coder%E6%A8%A1%E5%9E%8B/%E5%BE%AE%E4%BF%A1%E6%88%AA%E5%9B%BE_20250217184704.png"
                     
                ></p>
]]></content>
      <categories>
        <category>LLM</category>
      </categories>
      <tags>
        <tag>Ubuntu</tag>
      </tags>
  </entry>
  <entry>
    <title>docker多人共用gpu服务器</title>
    <url>/2025/03/24/docker%E5%A4%9A%E4%BA%BA%E5%85%B1%E7%94%A8gpu%E6%9C%8D%E5%8A%A1%E5%99%A8/</url>
    <content><![CDATA[
<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">
  <script id="hbeData" type="hbeData" data-hmacdigest="a8cddde5571263699bc6988e5cec0e2e27e70138b74cf83943e5ed87016cebee"></script>
  <div class="hbe hbe-content">
    <div class="hbe hbe-input hbe-input-default">
      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">
      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">
        <span class="hbe hbe-input-label-content hbe-input-label-content-default">Hey, password is required here.</span>
      </label>
    </div>
  </div>
</div>
<link href="/css/hbe.style.css" rel="stylesheet" type="text/css"><script data-swup-reload-script type="module" src="/js/plugins/hbe.js"></script>
<script data-swup-reload-script type="module">
import {initHBE} from "/js/plugins/hbe.js";
  console.log("hexo-blog-encrypt: loaded.");
    initHBE();
</script>
]]></content>
      <categories>
        <category>技术</category>
      </categories>
      <tags>
        <tag>docker</tag>
      </tags>
  </entry>
  <entry>
    <title>Hello World</title>
    <url>/2025/01/31/hello-world/</url>
    <content><![CDATA[<p>Welcome to <a class="link"   href="https://hexo.io/" >Hexo<i class="fa-solid fa-arrow-up-right ml-[0.2em] font-light align-text-top text-[0.7em] link-icon"></i></a>! This is your very first post. Check <a class="link"   href="https://hexo.io/docs/" >documentation<i class="fa-solid fa-arrow-up-right ml-[0.2em] font-light align-text-top text-[0.7em] link-icon"></i></a> for more info. If you get any problems when using Hexo, you can find the answer in <a class="link"   href="https://hexo.io/docs/troubleshooting.html" >troubleshooting<i class="fa-solid fa-arrow-up-right ml-[0.2em] font-light align-text-top text-[0.7em] link-icon"></i></a> or you can ask me on <a class="link"   href="https://github.com/hexojs/hexo/issues" >GitHub<i class="fa-solid fa-arrow-up-right ml-[0.2em] font-light align-text-top text-[0.7em] link-icon"></i></a>.</p>
<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><div class="code-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure></div>

<p>More info: <a class="link"   href="https://hexo.io/docs/writing.html" >Writing<i class="fa-solid fa-arrow-up-right ml-[0.2em] font-light align-text-top text-[0.7em] link-icon"></i></a></p>
<h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><div class="code-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure></div>

<p>More info: <a class="link"   href="https://hexo.io/docs/server.html" >Server<i class="fa-solid fa-arrow-up-right ml-[0.2em] font-light align-text-top text-[0.7em] link-icon"></i></a></p>
<h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><div class="code-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure></div>

<p>More info: <a class="link"   href="https://hexo.io/docs/generating.html" >Generating<i class="fa-solid fa-arrow-up-right ml-[0.2em] font-light align-text-top text-[0.7em] link-icon"></i></a></p>
<h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><div class="code-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure></div>

<p>More info: <a class="link"   href="https://hexo.io/docs/one-command-deployment.html" >Deployment<i class="fa-solid fa-arrow-up-right ml-[0.2em] font-light align-text-top text-[0.7em] link-icon"></i></a></p>
]]></content>
      <categories>
        <category>init</category>
      </categories>
      <tags>
        <tag>init</tag>
      </tags>
  </entry>
</search>
